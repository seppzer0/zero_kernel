stages:
- build
- tag

variables:
  GIT_STRATEGY: "clone"

job-build:
  stage: build
  tags:
    - docker
    - linux
  image: docker:24.0-cli
  services:
    - docker:dind
  script:
    - apk update && apk add python3 py3-pip
    - python3 -m pip install poetry
    - python3 -m poetry config virtualenvs.create false
    - python3 -m poetry install --no-root
    - python3 scripts/multi_build.py
  artifacts:
    paths:
      - "multi-build/zero-*.zip"
    when: on_success
    expire_in: never
  rules:
    - when: manual

job-tag:
  stage: tag
  script:
    - USERNAME=$CUSTOM_CI_USERNAME
    - PASSWORD=$CUSTOM_CI_PASSWORD
    - EMAIL=$CUSTOM_CI_EMAIL
    - TAGNAME=v$(sh scripts/get_version.sh)
    - git config --global user.name "${USERNAME}"
    - git config --global user.email "${EMAIL}"
    - git remote remove origin
    - git remote add origin https://${USERNAME}:${PASSWORD}@gitlab.com/${CI_PROJECT_PATH}
    - if [ $(git tag | grep "$TAGNAME") ]; then echo "[ * ] Tag already exists, skipping.."; else git tag $TAGNAME && git push origin $TAGNAME; fi
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - when: manual
